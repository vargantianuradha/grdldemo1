buildscript {
  repositories {
    jcenter()
    dependencies {
      classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+')
    }
  }
}

apply plugin: 'scala'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'java'
version = '1.0.0-SNAPSHOT'
group = 'com.buransky'
status = 'Integration'
  repositories {
  	maven {
        url "http://127.0.0.1:8081/artifactory/jcenter" // The Artifactory (preferably virtual) repository to resolve from
        credentials {
            username "${artifactory_user}"
            password "${artifactory_password}"
        }
    }
  }
artifactory {
  contextUrl = 'http://127.0.0.1:8081/artifactory'
  publish {
    repository {
      repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
      username = "${artifactory_user}" // The publisher user name
      password = "${artifactory_password}" // The publisher password
      // This is an optional section for configuring Ivy publication (when publishIvy = true).
      ivy {
        ivyLayout = '[organization]/[module]/ivy-[revision].xml'
        artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
        mavenCompatible = true //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
      }
    }
    defaults {
      // Reference to Gradle configurations defined in the build script.
      // This is how we tell the Artifactory Plugin which artifacts should be
      // published to Artifactory.
      publishConfigs('archives', 'published')
      // Properties to be attached to the published artifacts.
      properties = ['qa.level': 'basic', 'dev.team' : 'core']
      // You can also attach properties to published artifacts according to
      // the following notation:
      // <configuration name> <artifact spec>
      // The <configuration name> should be the name of the relevant Gradle Configuration or 'all'
      // (for all configurations).
      // Artifact spec has the following structure:
      // group:artifact:version:classifier@ext
      // Any element in the artifact spec notation can contain the * and ? wildcards.
      // For example:
      // org.acme:*:1.0.?_*:*@tgz
      properties {
        all '*:*:1.*:*@*', key1: 'val1', key2: 'val2'
        all 'org.jfrog.*:*:1.*:*@jar*', key3: 'val3', key4: 'val4'
      }
      publishPom = true // Publish generated POM files to Artifactory (true by default)
      publishIvy = true // Publish generated Ivy descriptor files to Artifactory (true by default)
    }
  }
}
